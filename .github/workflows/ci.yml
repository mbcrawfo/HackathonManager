name: CI

on: [push, pull_request]

jobs:
  backend-check-formatting:
    runs-on: "ubuntu-latest"
    steps:
    - name: Clone the repo
      uses: actions/checkout@v4

    - uses: ./.github/actions/dotnet-setup

    - name: Restore tools
      run: dotnet tool restore

    - name: Run CSharpier
      run: dotnet csharpier check .

  backend-build:
    runs-on: "ubuntu-latest"
    steps:
    - name: Clone the repo
      uses: actions/checkout@v4

    - uses: ./.github/actions/dotnet-setup

    - name: Build
      run: dotnet build --configuration Release

    - name: Publish Migrator
      run: >-
        dotnet publish
        ./src/HackathonManager.Migrator/HackathonManager.Migrator.csproj
        --no-build
        --configuration Release
        --output ./artifacts/HackathonManager.Migrator

    - name: Publish App
      run: >-
        dotnet publish
        ./src/HackathonManager/HackathonManager.csproj
        --no-build
        --configuration Release
        --output ./artifacts/HackathonManager

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-build-artifacts
        path: ./artifacts/**

  backend-test:
    needs: [backend-check-formatting, backend-build]
    runs-on: "ubuntu-latest"
    steps:
    - name: Clone the repo
      uses: actions/checkout@v4

    - uses: ./.github/actions/dotnet-setup

    - name: Test
      run: >-
        dotnet test
        --configuration Release
        --logger "console;verbosity=normal"
        --logger "trx;LogFileName=test-results/results.trx"
        --logger "GitHubActions;summary.includePassedTests=true;summary.includeSkippedTests=true"
        --blame
        --blame-hang-timeout 7m
        --blame-crash
        --results-directory test-results
        --collect "XPlat Code Coverage" -- RunConfiguration.CollectSourceInformation=true

    - name: Upload test results
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-test-results
        path: test-results/**

  frontend-check-formatting:
    runs-on: "ubuntu-latest"
    defaults:
      run:
        working-directory: ./src/hackathon-app
    steps:
    - name: Clone the repo
      uses: actions/checkout@v4

    - name: Run prettier
      uses: ./.github/actions/hackathon-app-task
      with:
        task: format:check

  frontend-lint:
    runs-on: "ubuntu-latest"
    steps:
    - name: Clone the repo
      uses: actions/checkout@v4

    - name: Run ESLint
      uses: ./.github/actions/hackathon-app-task
      with:
          task: lint:check

  frontend-type-check:
    runs-on: "ubuntu-latest"
    steps:
    - name: Clone the repo
      uses: actions/checkout@v4

    - name: Run type checking
      uses: ./.github/actions/hackathon-app-task
      with:
        task: type-check

  frontend-build:
    needs: [frontend-check-formatting, frontend-lint, frontend-type-check]
    runs-on: "ubuntu-latest"
    steps:
    - name: Clone the repo
      uses: actions/checkout@v4

    - name: Build the frontend
      uses: ./.github/actions/hackathon-app-task
      with:
          task: build -- --outDir="${{ github.workspace }}/artifacts/hackathon-app"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: spa-build-artifacts
        path: ./artifacts/**

  frontend-unit-tests:
    needs: [frontend-check-formatting, frontend-lint, frontend-type-check]
    runs-on: "ubuntu-latest"
    steps:
    - name: Clone the repo
      uses: actions/checkout@v4

    - name: Run unit tests
      uses: ./.github/actions/hackathon-app-task
      with:
          task: test:unit -- --coverage

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: spa-test-results
        path: |
          ./src/hackathon-app/test-results/
          ./src/hackathon-app/coverage/
