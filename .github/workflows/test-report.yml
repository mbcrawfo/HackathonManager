name: Test Report

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

jobs:
  report:
    if: github.event.workflow_run.conclusion == 'success' && github.actor != 'dependabot[bot]'

    runs-on: ubuntu-latest

    steps:
      - run: echo "${{ toJson(github.event.workflow_run) }}"

        shell: bash
      - name: Clone the repo
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Download Coverage Artifacts
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
          pattern: "*-test-results"

      - name: .Net Test Results
        uses: dorny/test-reporter@v2
        with:
          artifact: dotnet-test-results
          name: .Net Unit Tests
          report-title: .Net Unit Tests
          badge-title: .Net Unit Tests
          path: "test-results/*.trx"
          reporter: dotnet-trx

      - name: .Net Coverage Report
        uses: danielpalme/ReportGenerator-GitHub-Action@5.4.7
        with:
          reports: "dotnet-test-results/**/*.cobertura.xml"
          targetdir: dotnet-report
          reporttypes: "HtmlSummary;Cobertura;MarkdownSummary;MarkdownSummaryGithub"
          verbosity: "Info"
          title: "Code Coverage"
          tag: "${{ github.run_number }}_${{ github.run_id }}"

      - name: Report .Net Coverage
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: "dotnet-test-results/**/*.cobertura.xml"
          format: markdown
          output: both

      - name: .Net Coverage in Step Summary
        run: cat dotnet-report/SummaryGithub.md >> $GITHUB_STEP_SUMMARY
        shell: bash

      - name: Add comment to PR
        if: github.event.workflow_run.event.pull_requests.length > 0
        run: gh pr comment $PR_NUMBER --body-file dotnet-report/SummaryGithub.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.workflow_run.event.pull_requests[0].number }}

      - name: SPA Test Results
        uses: dorny/test-reporter@v2
        with:
          artifact: spa-test-results
          name: SPA Unit Tests
          report-title: SPA Unit Tests
          badge-title: SPA Unit Tests
          path: "test-results/*.xml"
          reporter: jest-junit

      - name: Report SPA Coverage
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          name: "SPA Coverage"
          vite-config-path: src/hackathon-spa/vite.config.ts
          json-summary-path: spa-test-results/coverage/coverage-summary.json
          json-final-path: spa-test-results/coverage/coverage-final.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pr-number: ${{ github.event.workflow_run.event.pull_requests[0].number }}
