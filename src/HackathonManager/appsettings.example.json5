// Documents all of the settings available for the Hackathon Manager application.
{
  "ConnectionStrings": {
    "HackathonDb": "See Npgsql documentation for PostgreSQL connection string format."
  },

  // Optional settings controlling console logging.
  "ConsoleLog": {
    "Type": "Disabled|Text|Json",
    // Minimum log level for this sink.  Default: Verbose.
    "Level": "Verbose|Debug|Information|Warning|Error|Fatal",
    // The template use for formatting text output.  See Serilog docs for details.
    "TextTemplate": ""
  },

  // Optional settings related logging EF queries and database commands.
  "DatabaseLogging": {
    "EnableDetailedErrors": false,
    "EnableSensitiveDataLogging": false
  },

  // When true, serve the SPA using this app's Kestrel server.  SPA files must be in the ./wwwroot directory.
  "EnableIntegratedSpa": false,

  // When true, apply migrations to the database after the app completes startup.
  "EnableStartupMigration": false,

  // Optional settings controlling logging to a file (rotated daily).
  "FileLog": {
    "Enabled": false,
    // Minimum log level for this sink.  Default: Verbose.
    "Level": "Verbose|Debug|Information|Warning|Error|Fatal",
    // Path to the log file, including file name.  Default: ./logs/log.txt
    "Path": ""
  },

  // Optional settings controlling OpenTelemetry.
  "OpenTelemetry": {
    // Minimum log level for OTEL logging sink.  Default: Verbose.
    "Level": "Verbose|Debug|Information|Warning|Error|Fatal",

    // Can be used when all exporters are enabled and all use the same settings.
    "AllExporters": {
      "Enabled": false,
      // OTLP endpoint URL including protocol and port.
      "Endpoint": "http://server:80",
      "Protocol": "HttpProtobuf|Grpc",
      // Optional dictionary of headers to send with OTLP requests.
      "Headers": {
        "X-Api-Key": "super-secret-api-key"
      }
    },

    // To enable specific exporters, or when the exporters need different configuration, you can specify their settings
    // individually using the same schema as AllExporters.  When AllExporters is set, it takes priority over these sections.
    "LogExporter": {},
    "MetricsExporter": {},
    "TraceExport": {}
  },

  "Serilog": {
    // Minimum log level for the entire app.  Can be overriden for specific sinks.
    "MinimumLevel": {
      "Default": "Verbose|Debug|Information|Warning|Error|Fatal",

      // Override the minimum log level for specific namespaces or classes.
      "Override": {
        "Microsoft.Hosting.Lifetime": "Debug",
        "System": "Error"
      }
    },
  },

  // Name used for OpenTelemetry logs and traces.
  "ServiceName": "service-name",

  // Settings for the RequestLogging middleware.
  "RequestLogging":  {
    // When true, logs the request body at the Trace (Verbose) level.
    // Should not be used in production as it can log sensitive information.
    // Can have a significant performance impact because it requires reading the request body twice.
    "LogBody": false,
    // Level at which to log request bodies.  Default: Verbose.
    "BodyLogLevel": "Verbose|Debug|Information|Warning|Error|Fatal",
    // The maximum body size to log, in bytes.  Default: 4096.
    "MaxBodySize": 1234,
    // Optional list of content types used to filter requests that should be logged.  Can include wildcards.
    // Default: ["*/*"] (log everything).
    "ContentTypes": []
  }
}
